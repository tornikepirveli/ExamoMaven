Chapter 1: Java Basics
1D. An entry point in a Java application consists of amain()method with a singleString[]argument, return type ofvoid, and modifierspublicandstatic. The name of the variable in the input argument does not matter. Option A is missing thestaticmodifier, Option B is missing theString[]argument, and Option C has the wrong access modifier and method name. Only Option D fulfills these requirements. Note that the modifierfinalis optional and may be added to an entry point method.
2A. The diagram is an example of object-oriented design in Java, making Option B a true statement. Options C and D are also true, as they follow from the inheritance model in the diagram. Option A is the correct answer, since platform independence has nothing to do with the diagram.
3C. The proper extension for a Java compiled bytecode file is.class, making Option C the correct answer.
4B. The fact that theDateclass exists in both packages does not impact the ability to import both packages, so lines 1 and 2 compile without issue, and Option A is incorrect. Line 4 will not compile because theDateclass used is ambiguous, making Option B correct and Option D incorrect. Finally, Option C is incorrect because line 5 does compile, as the fully qualified name of the class is used.
5A. Options B, C, and D are each attributes of traditional object-oriented programming. Option A is incorrect as an object-oriented project tends to group data and the actions related to that data into a single object.
6D. Only local variables have such a small scope, making Option D the correct answer.
7B. The packagejava.langis imported into every Java class, so Option B is correct. The other options must be explicitly imported. Option A exists but must be explicitly imported. Options C and D do not exist in the standard Java runtime.
8C. Java accepts Options A, B, and D as valid comments. Note that the/* */syntax can have additional (and uneven) star (*) characters as shown in B and D. Option C is incorrect as hashtag (#) is not a valid comment character in Java.
9D. A valid.javafile may define any number of classes or interfaces but have at most onepublicclass. It can also not define anypublicclasses. For these reasons, Option A, B, and C are incorrect, leaving Option D as the only correct answer.
10B. Notice in this question thatmain()is not astaticmethod, therefore it can access both class and instance variables. Since there are two class variables and two instance variables defined, Option B is the correct answer.
11B. A class will compile if it has unused or redundantimportstatements, making Option A and C incorrect. Option D is also incorrect as the compiler must be able to locate the class of theimportstatement. The correct answer is Option B. Removing unusedimportstatements does not cause a class to become unable to be compiled.
12A. The code does not compile because of line 5, making Option A the correct answer. For this question, it helps to understand variable scope. Themain()method isstaticand does not have access to any class instance variables. Thebirdsvariable is notstaticand requires a class instance variable to access. Therefore, the code does not compile when thestaticmethod attempts to access a non-staticvariable without an instance of the class.
13D. Thejavacommand can only execute compiled.classfiles, so I is false. Java is most certainly object oriented, one of the key design principles, so II is also false. Thejavaccommand compiles into bytecode, which must be run in a Java virtual machine (JVM), and is not native machine code, so III is false as well. Since none of the statements are true, Option D is the correct answer.
14D. A class can start with a comment, an optionalpackagestatement, or animportstatement if there is nopackagestatement. It cannot start with a variable definition, making Option D the correct answer.
15C. Classes may be defined without a package declaration and are placed in the default package, so Option A is incorrect. Option B is a completely false statement as no such file is required in Java. Option C is correct as it is one of the primary reasons for organizing your application into packages. Option D is incorrect as package-private allows access to methods and variables to be limited to those classes within the same package.
16B. The compilation command requires the full or relative name of the file, including the.javaextension, making Options A and C incorrect. The execution command requires the class name without a filename extension, making Option D incorrect. Option B is the only correct set of compilation and execution commands.
17D. Encapsulation is the technique of removing access to a class’s instance variables from processes outside the class, making Option D the correct answer.
18D. Theheightvariable is declared within the if-then statement block. Therefore, it cannot be referenced outside the if-then statement and the code does not compile.
19A. A Java bytecode file is a binary encoded set of instructions designed to be run on any computer with a compatible JVM, making Option A the only correct answer. By compatible JVM, we mean one capable of running the class file. For example, a Java 6 JVM may have trouble executing a Java 8 compiled file. Option B is incorrect, and is more a facet of machine language compiled programming classes. Option C is also incorrect as binary data is not particularly human readable. Finally, Option D is incorrect as the compiled file can be distributed without its.javasource file and execute without issue.
20D. Unlike with some other programming languages, the proper way to terminate a line of code is with a semicolon (;), making D the only correct answer.
21C. The code compiles and runs without issue, so Options A and B are incorrect. The question relies on your ability to understand variable scope. The variabletodayhas local scope to the method in which it is executed. The variabletomorrowis re-declared in the method, but the reference used on line 7 is to the instance variable with a value of10. Finally, the variabletomorrowisstatic. While using an instance reference to access astaticvariable is not recommended, it does not prevent the variable from being read. The result is line 7 evaluates and prints (20 + 10 + 1) = 31, making C the correct answer.
22C. Line 1 is missing theclasskeyword. Line 2 contains two types for the same variable. Line 3 is a valid definition for a method, making C the correct answer. Finally, line 4 contains an access modifier,private, after the return type, which is not allowed. In addition,voidis an invalid type for variables.
23D. Platform independence is the property of Java that allows it to be run on a variety of different devices.
24A. Options B, C, and D are each correct statements about JVMs. Option A is incorrect. Not only is it not a statement about JVMs, it is actually false as Java bytecode can often be easily decoded/decompiled.
25B. There is no such thing as package variables, so Option A is incorrect. Option C is incorrect as the variable is only in scope within a specific instance of the class. Option D is also incorrect as the variable is only in scope for a single method that it is defined in. Option B is the only correct answer as class variables are in scope within the program.
26C. Option A is incorrect as the sub-packagerecurringis not included by theimportstatements. Option B is also incorrect as it uses the pluraldirectorsinstead of the singulardirectorused in theimportstatements. Option D is incorrect as the wildcard is applied to the sub-packagemovie.director, not the packagemovie. Finally, Option C is correct as it is a valid class accessible from the wildcard import.
27D. Java classes are defined in this order:packagestatement,importstatements, class declaration, making Option D the only correct answer. Note that not all of these statements are required. For example, a class may not have apackagestatement, but if it does, it must come first in the file.
28D. Theimportstatements forstars.*andstars.Blackholeare redundantimportstatements, since only the classBlackholeis used, and therefore one of them can be safely removed. Theimportstatementsjava.lang.*andjava.lang.Objectare both not required asjava.langis automatically imported in every Java class. Therefore, three of the fourimportstatements can be safely removed, making the correct answer Option D.
29C. The application prints the third argument of the input methods. Note that double quotes""group input arguments. Therefore, the third argument of Option A isWhite-tailed deer. The third argument of Option B is3. The third argument of Option C isWhite-tailed, making it the correct answer. Finally, Option D only has two input arguments, leading to anArrayIndexOutOfBoundsExceptiontrying to read the third argument at runtime.
30B. Thejavaccommand compiles a.javafile into a.classbytecode file, making Option B the correct answer.
31B. Java is object oriented, not procedural, so Option A is a false statement. Java allows method overloading in subclasses, so Option B is correct. Operator overloading is permitted in languages like C++, not Java, so Option C is also untrue. Finally, Option D is not a true statement as the JVM manages the location of objects in memory that can change and is transparent to the Java application.
32D. Option A is incorrect as the return type of the method cannot benull. Option B is also incorrect as the return type cannot bevoidif the method uses areturnstatement. Option C is incorrect too as theclasskeyword is replaced withint. Option D is correct because it’s the only answer that allows the code to compile without issue. Note that other values are possible for this question. For example, eitherintorlongcan be entered in the last blank. The key here is that only one of the available answer choices allows the code to compile.
33A. The code compiles so Option D is incorrect. The input to the constructor is ignored, making the assignment ofendto be4. Sincestartis2, the subtraction of4by2results in the application printing2, followed by5, making Option A the correct answer.
34D. Option A is a false statement, while Options B and C are actually arguments against using inheritance. Option D is one of the most important reasons Java supports inheritance, to allow increased code reuse among classes.
35A. The double slash (//) syntax can have any number of slashes as a comment, so long as it starts with two of them, making Option A the correct answer. The (#) is not a comment character in Java, regardless of whether it is followed by a (!), so Option B is incorrect. Option C is incorrect as a single slash (/) is not a valid comment in Java. Finally, Option D is incorrect as Option A is a valid comment.
36B. An entry point in a Java application consists of amain()method with a singleString[]argument, return type ofvoid, and modifierspublicandstatic. Option D is the typical syntax for this method, although Options A and C are also valid forms of this method. Note that the modifierfinalis optional and may be added to the method signature. Furthermore, themain()method may take a vararg or array. Option B is the only invalid declaration as it does not take an array as an argument.
37B. The line of code cannot be inserted ata1because no variables are allowed outside of the class declaration in this file, making Options A and D incorrect. The line of code can also not be inserted ata3as local variables defined within methods cannot have access modifiers such aspublic, making Option C incorrect. The code can be inserted independently ata2anda4as instance variables can be defined anywhere in the class outside a method. Therefore, Option B is the correct choice.
38A. Option A is the only correct answer as aclassdefinition is the only required component in a Java class file. Note that we said a Java class file here; Java also allows interfaces and enums to be defined in a file. Apackagestatement andimportstatements are optional for declaring a class, making Options B and C incorrect. A class may also be defined with package-level access in a file, making Option D an incorrect answer.
39D. The proper extension for a Java compiled bytecode file is.java, making Option D the correct answer.
40C. Remember thatjava.langis automatically imported in all Java classes, therefore bothjava.lang.Mathandpocket.complex.Mathare both imported into this class. Importing both sets of packages does not cause any compilation issues, making Option A incorrect. Line 3 is unnecessary import but including it does not prevent the class from compiling, making Option B incorrect. While both versions ofMathmay be imported into the class, the usage of theMathclass requires a package name. Because of this, line 6 does not compile as the class reference is ambiguous, making Option C the correct answer and Option D incorrect.
41A. Options B and C are accessible within the class as they are covered by theimportstatements. Option D is also fine asjava.lang.Objectis available without an explicit import. The only class not automatically accessible within the class without the full package name isdog.puppy.female.KCas theimportstatements do not include sub-packages; therefore, Option A is the correct answer.
42B. Object-oriented programming is the technique of structuring data into objects, which may contain data and a set of actions that operate on the data, making Option B the correct answer.
43A. All of theimportstatements in this class are required. Removing any of them would cause the class to not compile, making Option A the correct answer.
44C. ThenumLockvariable is not accessible in thestatic main()method without an instance of theKeyboardclass; therefore, the code does not compile, and Option C is the correct answer.
45D. The code compiles and runs without issue, so Option A is incorrect. The question involves understanding the value and scope of each variable at theprint()statement. The variablesfeetandtracksare locally scoped and set to4and15, respectively, ignoring the value oftracksof5in the instance of the class. Finally, thestaticvariables.wheelshas a value of1. The result is the combined value is20, making Option D the correct answer.
46B. First off, thecolorvariable defined in the instance and set toredis ignored in the methodprintColor()as local scope overrides instance scope, so Option A is incorrect. The value ofcolorpassed to theprintColor()method isblue, but that is lost by the assignment topurple, making Option B the correct answer and Option C incorrect. Option D is incorrect as the code compiles and runs without issue.
47C. Thejavaccommand takes a text-based.javafile and returns a binary bytecode.classfile, making II a true statement. Thejavacommand uses a period (.)to separate packages, not a slash (/), making I a true statement and III a false statement. For these reasons, Option C is the correct answer.
48D. The application compiles without issue, so Option C is incorrect. The application does not execute though, as themain()method does not have the correct method signature. It is missing the required input argument, an array ofString. Trying to execute the application without a proper entry point produces an error, making Option D the correct answer.
49C. Option A does not compile because it is missing the closing bracket for the class. Option D does also not compile asvoidis not a valid type for a variable. Regardless, Options A and D are incorrect as they are missing thegetRating()method. Note that Option A also uses an abbreviation fornumberOfPages. Option B is incorrect as it is missing thenumberOfPagesattribute. Option C is the correct answer as it properly defines the attributenumberOfPagesand methodgetRating().
50C. Garbage collection can happen at any time while an application is running, especially if the available memory suddenly becomes low, making Option A incorrect. Option B is also incorrect, since it is trivial to create a Java application with an infinite loop that never terminates. Option D is incorrect because the computer must be able to run the JVM in order to execute a Java class. Option C is the only correct answer, as the JVM does require an entry point method to begin executing the application.

